Welcome Screen
import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:sacco_app/screens/signin_screen.dart';
import 'package:sacco_app/screens/signup_screen.dart';
import 'package:sacco_app/theme/theme.dart';
import 'package:sacco_app/widgets/custom_scaffold.dart';
import 'package:sacco_app/widgets/welcome_button.dart';

class welcomeScreen extends StatelessWidget {
  const welcomeScreen({super.key, this.buttonText});
  final String? buttonText;
  @override
  Widget build(BuildContext context) {
    return CustomScaffold(
      body: null,
      child: Column(

        children: [
           Container(
            width: 200,
             height: 200,
             child: Image(

                image: AssetImage('assets/images/log.png'),

             ),
           ),

          Flexible(
            flex: 1,
              child: Container(
                padding: const EdgeInsets.symmetric(
                  vertical: 0,
                  horizontal: 40.0,
                ),
            child: Center(child: RichText(textAlign: TextAlign.center,
              text: const TextSpan(
                children: [
                  TextSpan(
                    text: 'Welcome Back!\n',
                    style: TextStyle(
                      fontSize: 45.0,
                      fontWeight: FontWeight.w600,
                    )
                  ),
                  TextSpan(
                    text: '\n Enter personal details to your Sacco account',
                    style: TextStyle(
                      fontSize: 20,
                    )

                  )
                ]
              ),)),
          )),
          const Flexible(
           flex: 1,
            child: Align(
              alignment: Alignment.bottomRight,
              child: Row(
                  children: [
                    Expanded(
                      child:
                    WelcomeButton(
                      buttonText: 'Sign in',
                      onTap: SignInScreen(),
                      color: Colors.transparent,
                      textColor: Colors.black,
                    ),
                    ),
                    Expanded(child:
                    WelcomeButton(
                      color: Colors.black,
                      textColor: Colors.white,
                      onTap: SignupScreen(),
                      buttonText: 'Sign up',

                    ),),

                  ],),
            ),),
        ],
      ),
    );

  }
}


<!---
karisDj/karisDj is a ✨ special ✨ repository because its `README.md` (this file) appears on your GitHub profile.
You can click the Preview link to take a look at your changes.
--->
sign in page
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:icons_plus/icons_plus.dart';
import 'package:sacco_app/screens/home_page.dart';
import 'package:sacco_app/screens/signin_screen.dart';
import 'package:sacco_app/user_auth/firebase_auth_implementation/firebase_auth_services.dart';
import 'package:sacco_app/widgets/custom_scaffold.dart';

import '../theme/theme.dart';

class SignupScreen extends StatefulWidget {
  const SignupScreen({super.key});

  @override
  State<SignupScreen> createState() => _SignupScreenState();
}

class _SignupScreenState extends State<SignupScreen> {
  final _formSignUpKey = GlobalKey<FormState>();
  bool rememberPassword = true;

  final FirebaseAuthService _auth = FirebaseAuthService();
  TextEditingController _usernameController = TextEditingController();
  TextEditingController _emailController = TextEditingController();
  TextEditingController _passwordController = TextEditingController();
  @override
  void dispose(){
    _usernameController.dispose();
        _emailController.dispose();
        _passwordController.dispose();
        super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return CustomScaffold(
    body: null,
    child: Column(
      children: [
        const Expanded(
            flex: 1,
            child: SizedBox(
              height: 10,
            )),
        Expanded(
            flex: 7,
            child: Container(
                padding: const EdgeInsets.fromLTRB(25.0,50.0,25.0,20.0),
                decoration: const BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.only(
                        topLeft: Radius.circular(40.0),
                        topRight: Radius.circular(40.0)
                    ),
                ),
            child: SingleChildScrollView(
              child: Form(
                key: _formSignUpKey,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      const Text(
                        'Welcome to Equity loan Staff Sacco',
                        style: TextStyle(
                          fontSize: 30.0,
                          fontWeight: FontWeight.w900,
                          color: Color.fromARGB(255, 128, 0, 0),
                        ),
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      TextFormField(
                        controller: _usernameController,
                        validator: (value) {
                          if (value == null || value.isEmpty){
                            return 'Please enter full name';
                          }
                          return null;
                        },
                        decoration: InputDecoration(
                            label: const Text('Account name'),
                            hintText: 'Enter Account name',
                            hintStyle: const TextStyle(
                              color: Colors.black,
                            ),
                            border: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            ),
                            enabledBorder: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            )

                        ),
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      TextFormField(
                        controller: _emailController,
                        validator: (value) {
                          if (value == null || value.isEmpty){
                            return 'Please Account number';
                          }
                          return null;
                        },
                        decoration: InputDecoration(
                            label: const Text('Account number'),
                            hintText: 'Enter Account number',
                            hintStyle: const TextStyle(
                              color: Colors.black,
                            ),
                            border: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            ),
                            enabledBorder: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            )

                        ),
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      TextFormField(
                        validator: (value) {
                          if (value == null || value.isEmpty){
                            return 'Please enter PF number';
                          }
                          return null;
                        },
                        decoration: InputDecoration(
                            label: const Text('PF number'),
                            hintText: 'Enter PF number',
                            hintStyle: const TextStyle(
                              color: Colors.black,
                            ),
                            border: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            ),
                            enabledBorder: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            )

                        ),
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      TextFormField(
                        controller: _passwordController,
                        obscureText: true,
                        obscuringCharacter: '*',
                        validator: (value) {
                          if (value == null || value.isEmpty){
                            return 'Please enter Password';
                          }
                          return null;
                        },
                        decoration: InputDecoration(
                            label: const Text('Password'),
                            hintText: 'Enter Password',
                            hintStyle: const TextStyle(
                              color: Colors.black,
                            ),
                            border: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            ),
                            enabledBorder: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            )

                        ),
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      TextFormField(
                        obscureText: true,
                        obscuringCharacter: '*',
                        validator: (value) {
                          if (value == null || value.isEmpty){
                            return 'Please confirm Password';
                          }
                          return null;
                        },
                        decoration: InputDecoration(
                            label: const Text('Confirm Password'),
                            hintText: 'Confirm Password',
                            hintStyle: const TextStyle(
                              color: Colors.black,
                            ),
                            border: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            ),
                            enabledBorder: OutlineInputBorder(
                              borderSide: const BorderSide(
                                color: Colors.black,
                              ),
                              borderRadius: BorderRadius.circular(10),
                            )

                        ),
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      Row(
                        children: [
                          Row(
                              children: [
                                Checkbox(value: rememberPassword,
                                  onChanged: (bool? value){
                                    setState(() {
                                      rememberPassword = value!;
                                    });
                                  },
                                  activeColor: lightColorScheme.error,
                                ),
                                const Text(
                                  'I agree to the processing of ',
                                  style: TextStyle(
                                    color: Colors.black,
                                  ),
                                )
                              ]),
                          GestureDetector(
                              child: const Text(
                                'Personal data',
                                style: TextStyle(
                                    fontWeight: FontWeight.bold,
                                    color: Color.fromARGB(255, 128, 0, 0)
                                ),
                              )
                          ),
                        ],
                      ),
                      const SizedBox(
                        height: 20,
                      ),

                      SizedBox(
                        width: double.infinity,
                        child: ElevatedButton(
                            onPressed: (){
                              if(
                              _formSignUpKey.currentState!.validate() &&
                                  rememberPassword
                              ){
                                ScaffoldMessenger.of(context).showSnackBar(
                                  const SnackBar(content: Text('Processing Data'),
                                  ),
                                );
                              }
                              else if (!rememberPassword){
                                ScaffoldMessenger.of(context).showSnackBar(
                                    const SnackBar(content: Text(
                                        'Please agree to the processing of personal details'
                                    ))
                                );
                              }

                            },
                            child: const Text('Sign up',
                             )

                        ),
                      ),
                             const SizedBox(
                        height: 20,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Expanded(child: Divider(
                            thickness: 0.7,
                            color: Colors.grey.withOpacity(0.5),
                          )),
                          const Padding(padding: EdgeInsets.symmetric(
                            vertical: 0,
                            horizontal: 10,
                          ),
                            child: Text(
                              'Sign up with',
                              style: TextStyle(
                                color: Colors.black54,
                              ),
                            ),
                          ),
                          Expanded(child: Divider(
                            thickness: 0.7,
                            color: Colors.grey.withOpacity(0.5),
                          )),
                        ],
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        children: [
                          Logo(Logos.facebook_f),
                          Logo(Logos.twitter),
                          Logo(Logos.google),
                          Logo(Logos.apple),
                        ],
                      ),
                      const SizedBox(
                        height: 20,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          const Text(
                            'Already have an account? ',
                            style: TextStyle(
                              color: Colors.black54,
                            ),
                          ),
                          GestureDetector(
                              onTap: () {
                                Navigator.push(context,
                                    MaterialPageRoute(builder: (e) => const SignInScreen()
                                    ));
                              },
                              child: const Text('Sign in',
                                style: TextStyle(
                                  color: Color.fromARGB(200, 128, 0, 0),
                                  fontWeight: FontWeight.bold,
                                ),

                              )),

                        ],
                      )
                    ],
                  )),
            ),
            )
        ),
    ]
    )
    );

  }

  void _signUp() async {
    String username = _usernameController.text;
    String email = _emailController.text;
    String password = _passwordController.text;
    User? user = await _auth.signUpWithEmailAndPassword(email, password);

    if (user != null) {
      print("User is successfully created");
      Navigator.pushNamed(context, "/home");
    }
    else
      print("Some error happened");
  }

}
